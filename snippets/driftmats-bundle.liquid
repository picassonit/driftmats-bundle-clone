{% comment %}
  DriftMats Bundle Clone - Exact replica of their "Kaching Bundles" implementation
  
  Usage: {% render 'driftmats-bundle', product: product %}
  
  This snippet creates a bundle selector with:
  - 1 pack (no discount)
  - 2 pack (10% discount, "MOST POPULAR" badge, free $5 gift card)
  - 3 pack (12% discount, "BEST VALUE" badge, free needles)
{% endcomment %}

{% liquid
  assign product_price = product.price
  assign product_title = product.title
  assign product_id = product.id
  assign variant_id = product.selected_or_first_available_variant.id
%}

<div class="driftmats-bundle-wrapper" data-product-id="{{ product_id }}">
  <h3 class="bundle-title">BUNDLE & SAVE</h3>
  
  <div class="bundle-options">
    
    <!-- 1 Pack Option -->
    <div class="bundle-option" data-quantity="1" data-discount="0">
      <div class="bundle-option-content">
        <div class="bundle-quantity">
          <span class="quantity-number">1</span>
          <span class="quantity-text">pack</span>
        </div>
        <div class="bundle-details">
          <div class="bundle-price">
            <span class="price">${{ product_price | money_without_currency }}</span>
          </div>
        </div>
      </div>
      <input type="radio" name="bundle-selection" value="1" class="bundle-radio" id="bundle-1">
    </div>
    
    <!-- 2 Pack Option - MOST POPULAR -->
    <div class="bundle-option most-popular" data-quantity="2" data-discount="10">
      <div class="bundle-badge">MOST POPULAR</div>
      <div class="bundle-option-content">
        <div class="bundle-quantity">
          <span class="quantity-number">2</span>
          <span class="quantity-text">pack</span>
        </div>
        <div class="bundle-details">
          <div class="bundle-price">
            {% assign discounted_price = product_price | times: 2 | times: 0.9 %}
            <span class="original-price">${{ product_price | times: 2 | money_without_currency }}</span>
            <span class="price">${{ discounted_price | money_without_currency }}</span>
          </div>
          <div class="bundle-savings">
            <span class="savings-text">Save 10%</span>
          </div>
          <div class="free-gift">
            <span class="gift-text">+ FREE $5 Gift Card</span>
          </div>
        </div>
      </div>
      <input type="radio" name="bundle-selection" value="2" class="bundle-radio" id="bundle-2" checked>
    </div>
    
    <!-- 3 Pack Option - BEST VALUE -->
    <div class="bundle-option best-value" data-quantity="3" data-discount="12">
      <div class="bundle-badge">BEST VALUE</div>
      <div class="bundle-option-content">
        <div class="bundle-quantity">
          <span class="quantity-number">3</span>
          <span class="quantity-text">Pack</span>
        </div>
        <div class="bundle-details">
          <div class="bundle-price">
            {% assign discounted_price_3 = product_price | times: 3 | times: 0.88 %}
            <span class="original-price">${{ product_price | times: 3 | money_without_currency }}</span>
            <span class="price">${{ discounted_price_3 | money_without_currency }}</span>
          </div>
          <div class="bundle-savings">
            <span class="savings-text">Save 12%</span>
          </div>
          <div class="free-gift">
            <span class="gift-text">+ FREE Needles for the Wall</span>
          </div>
        </div>
      </div>
      <input type="radio" name="bundle-selection" value="3" class="bundle-radio" id="bundle-3">
    </div>
    
  </div>
  
  <!-- Add to Cart Button -->
  <div class="bundle-cart-actions">
    <button type="button" class="btn bundle-add-to-cart" data-variant-id="{{ variant_id }}">
      <span class="cart-text">Add to Cart</span>
      <span class="cart-price" id="bundle-total-price">${{ product_price | times: 2 | times: 0.9 | money_without_currency }}</span>
    </button>
  </div>
</div>

<style>
.driftmats-bundle-wrapper {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  max-width: 400px;
  margin: 20px 0;
}

.bundle-title {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 16px;
  text-align: center;
  color: #333;
}

.bundle-options {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.bundle-option {
  position: relative;
  background: rgba(143, 143, 143, 0.07);
  border: 2px solid transparent;
  border-radius: 8px;
  padding: 16px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.bundle-option:hover,
.bundle-option.selected {
  background: white;
  border-color: #ff0000;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.bundle-option-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.bundle-quantity {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.quantity-number {
  font-size: 24px;
  font-weight: bold;
  color: #333;
  line-height: 1;
}

.quantity-text {
  font-size: 14px;
  font-weight: bold;
  color: #666;
  text-transform: lowercase;
}

.bundle-details {
  text-align: right;
  flex: 1;
  margin-left: 16px;
}

.bundle-price {
  margin-bottom: 4px;
}

.original-price {
  font-size: 14px;
  color: #999;
  text-decoration: line-through;
  margin-right: 8px;
}

.price {
  font-size: 18px;
  font-weight: bold;
  color: #333;
}

.bundle-savings {
  margin-bottom: 4px;
}

.savings-text {
  font-size: 12px;
  font-weight: bold;
  color: #00a651;
}

.free-gift {
  margin-top: 4px;
}

.gift-text {
  font-size: 12px;
  font-weight: bold;
  color: #ff0000;
}

.bundle-badge {
  position: absolute;
  top: -8px;
  left: 16px;
  background: #ff0000;
  color: white;
  padding: 4px 12px;
  border-radius: 12px;
  font-size: 11px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.bundle-radio {
  position: absolute;
  top: 16px;
  right: 16px;
  width: 20px;
  height: 20px;
  accent-color: #ff0000;
}

.bundle-cart-actions {
  margin-top: 20px;
}

.bundle-add-to-cart {
  width: 100%;
  background: #ff0000;
  color: white;
  border: none;
  border-radius: 8px;
  padding: 16px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s ease;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.bundle-add-to-cart:hover {
  background: #e60000;
}

.bundle-add-to-cart:active {
  background: #cc0000;
}

.cart-text {
  flex: 1;
  text-align: left;
}

.cart-price {
  font-size: 18px;
  font-weight: bold;
}

@media (max-width: 768px) {
  .driftmats-bundle-wrapper {
    max-width: 100%;
  }
  
  .bundle-option-content {
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
  }
  
  .bundle-details {
    text-align: left;
    margin-left: 0;
    width: 100%;
  }
  
  .bundle-radio {
    top: 12px;
    right: 12px;
  }
}
</style>

<script>
(function() {
  'use strict';
  
  const bundleWrapper = document.querySelector('.driftmats-bundle-wrapper');
  const bundleOptions = bundleWrapper.querySelectorAll('.bundle-option');
  const bundleRadios = bundleWrapper.querySelectorAll('.bundle-radio');
  const addToCartBtn = bundleWrapper.querySelector('.bundle-add-to-cart');
  const totalPriceSpan = bundleWrapper.querySelector('#bundle-total-price');
  
  const productPrice = {{ product.price | times: 0.01 }};
  const variantId = '{{ variant_id }}';
  
  // Handle bundle option selection
  bundleOptions.forEach((option, index) => {
    option.addEventListener('click', function() {
      // Remove selected class from all options
      bundleOptions.forEach(opt => opt.classList.remove('selected'));
      
      // Add selected class to clicked option
      this.classList.add('selected');
      
      // Check the corresponding radio button
      bundleRadios[index].checked = true;
      
      // Update total price
      updateTotalPrice();
    });
  });
  
  // Handle radio button changes
  bundleRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      if (this.checked) {
        // Remove selected class from all options
        bundleOptions.forEach(opt => opt.classList.remove('selected'));
        
        // Add selected class to parent option
        this.closest('.bundle-option').classList.add('selected');
        
        // Update total price
        updateTotalPrice();
      }
    });
  });
  
  function updateTotalPrice() {
    const selectedOption = bundleWrapper.querySelector('.bundle-option.selected');
    if (!selectedOption) return;
    
    const quantity = parseInt(selectedOption.dataset.quantity);
    const discount = parseInt(selectedOption.dataset.discount);
    
    let totalPrice = productPrice * quantity;
    if (discount > 0) {
      totalPrice = totalPrice * (1 - discount / 100);
    }
    
    totalPriceSpan.textContent = '$' + totalPrice.toFixed(2);
  }
  
  // Handle add to cart
  addToCartBtn.addEventListener('click', function() {
    const selectedOption = bundleWrapper.querySelector('.bundle-option.selected');
    if (!selectedOption) return;
    
    const quantity = parseInt(selectedOption.dataset.quantity);
    
    // Add to cart via Shopify AJAX API
    const formData = {
      'items': [{
        'id': variantId,
        'quantity': quantity
      }]
    };
    
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
      // Trigger cart update event
      document.dispatchEvent(new CustomEvent('cart:updated'));
      
      // Optional: Show success message or redirect to cart
      // window.location.href = '/cart';
      
      console.log('Product added to cart:', data);
    })
    .catch(error => {
      console.error('Error adding to cart:', error);
    });
  });
  
  // Initialize with 2-pack selected (most popular)
  const defaultOption = bundleWrapper.querySelector('[data-quantity="2"]');
  if (defaultOption) {
    defaultOption.classList.add('selected');
    updateTotalPrice();
  }
})();
</script>